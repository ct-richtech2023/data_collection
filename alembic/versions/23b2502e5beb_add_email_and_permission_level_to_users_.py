"""Add email and permission_level to users table

Revision ID: 23b2502e5beb
Revises: 
Create Date: 2025-10-14 02:47:50.819739

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '23b2502e5beb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 先添加可空字段
    op.add_column('users', sa.Column('email', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('permission_level', sa.String(length=20), nullable=True))
    
    # 为现有数据设置默认值
    op.execute("UPDATE users SET permission_level = 'viewer' WHERE permission_level IS NULL")
    op.execute("UPDATE users SET email = CONCAT(username, '@example.com') WHERE email IS NULL")
    
    # 将字段设置为非空
    op.alter_column('users', 'email', nullable=False)
    op.alter_column('users', 'permission_level', nullable=False)
    
    # 创建索引和约束
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_unique_constraint('uq_users_email', 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_users_email', 'users', type_='unique')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_column('users', 'permission_level')
    op.drop_column('users', 'email')
    # ### end Alembic commands ###
